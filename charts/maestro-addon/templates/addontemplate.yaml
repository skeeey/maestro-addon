{{- $gRPCCerts := include "genGRPCServingCerts" . | fromYaml }}

---

apiVersion: addon.open-cluster-management.io/v1alpha1
kind: AddOnTemplate
metadata:
  name: maestro-addon
spec:
  addonName: maestro-addon
  agentSpec:
    workload:
      manifests:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: maestro-addon
          name: maestro-addon
          namespace: open-cluster-management-agent
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              app: maestro-addon
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
              labels:
                app: maestro-addon
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - key: app
                          operator: In
                          values:
                          - maestro-addon
                      topologyKey: failure-domain.beta.kubernetes.io/zone
                    weight: 70
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - key: app
                          operator: In
                          values:
                          - maestro-addon
                      topologyKey: kubernetes.io/hostname
                    weight: 30
              containers:
              - command:
                - /usr/local/bin/maestro
                - agent
                - --consumer-name={{`{{CLUSTER_NAME}}`}}
                - --workload-source-driver={{ .Values.maestro.broker }}
                - --workload-source-config=/spoke/configs/config.yaml
                - --cloudevents-client-id={{`{{CLUSTER_NAME}}`}}-work-agent
                - --cloudevents-client-codecs=manifestbundle
                - --v={{ .Values.maestroAgent.logLevel }}
                env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                image: {{ .Values.global.imageOverrides.maestroImage }}
                imagePullPolicy: {{ .Values.global.imagePullPolicy }}
                name: maestro-addon
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 2
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 2
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  requests:
                    cpu: 2m
                    memory: 16Mi
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /spoke/configs
                  name: maestro-addon-config
                - mountPath: /spoke/certs
                  name: maestro-mq-ca
                - mountPath: /tmp
                  name: tmpdir
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccountName: klusterlet-work-sa
              terminationGracePeriodSeconds: 30
              volumes:
              - name: maestro-addon-config
                configMap:
                  name: maestro-addon-config
              - name: maestro-mq-ca
                secret:
                  secretName: maestro-mq-ca
              - emptyDir: {}
                name: tmpdir
      - apiVersion: v1
        kind: ConfigMap
        metadata:
          name: maestro-addon-config
          namespace: open-cluster-management-agent
        data:
          config.yaml: |-
{{- if eq .Values.maestro.broker "kafka" }}
{{- if eq .Values.messageQueue.amqStreams.listener.type "route" }}
            bootstrapServer: {{- indent 1 (printf "%s:443" (lookup "route.openshift.io/v1" "Route" .Values.messageQueue.amqStreams.namespace (printf "%s-kafka-tls-bootstrap" .Values.messageQueue.amqStreams.name)).spec.host) }}
{{- end }}
{{- if eq .Values.messageQueue.amqStreams.listener.type "internal" }}
            bootstrapServer: {{- indent 1 (printf "kafka-kafka-bootstrap.%s:%d" .Values.messageQueue.amqStreams.namespace .Values.messageQueue.amqStreams.listener.port) }}
{{- end }}
{{- end }}
{{- if eq .Values.maestro.broker "grpc" }}
{{- if eq .Values.messageQueue.grpc.type "route" }}
{{- $baseDomain := (lookup "config.openshift.io/v1" "DNS" "" "cluster").spec.baseDomain }}
            url: {{- indent 1 (printf "maestro-grpc-broker-%s.apps.%s:443" .Values.global.namespace $baseDomain) }}
{{- end }}
{{- if eq .Values.messageQueue.grpc.type "internal" }}
            url: {{- indent 1 (printf "maestro-grpc-broker.%s:8091" .Values.global.namespace) }}
{{- end }}
{{- end }}
            caFile: /spoke/certs/ca.crt
            clientCertFile: /managed/open-cluster-management.io-maestro-addon/tls.crt
            clientKeyFile: /managed/open-cluster-management.io-maestro-addon/tls.key
      - apiVersion: v1
        kind: Secret
        metadata:
          name: maestro-mq-ca
          namespace: open-cluster-management-agent
        data:
{{- if eq .Values.maestro.broker "kafka" }}
{{- $clusterCA := (lookup "v1" "Secret" .Values.messageQueue.amqStreams.namespace (printf "%s-cluster-ca-cert" .Values.messageQueue.amqStreams.name)) -}}
{{- range $key, $value := $clusterCA.data }}
  {{- if eq $key "ca.crt" }}
          ca.crt: {{ $value }}
  {{- end }}
{{- end }}
{{- end }}
{{- if eq .Values.maestro.broker "grpc" }}
          ca.crt: {{ $gRPCCerts.ca }}
{{- end }}
  registration:
  - type: CustomSigner
    customSigner:
      signerName: open-cluster-management.io/maestro-addon
      signingCA:
        name: maestro-signer

---

apiVersion: v1
kind: Secret
metadata:
  name: maestro-signer
  namespace: '{{ .Values.addOnManager.namespace }}'
type: kubernetes.io/tls
data:
{{- if eq .Values.maestro.broker "kafka" }}
{{- $clientCACert := (lookup "v1" "Secret" .Values.messageQueue.amqStreams.namespace (printf "%s-clients-ca-cert" .Values.messageQueue.amqStreams.name)) -}}
{{- $clientCAKey := (lookup "v1" "Secret" .Values.messageQueue.amqStreams.namespace (printf "%s-clients-ca" .Values.messageQueue.amqStreams.name)) -}}
{{- range $key, $value := $clientCACert.data }}
  {{- if eq $key "ca.crt" }}
  tls.crt: {{ $value }}
  {{- end }}
{{- end }}
{{- range $key, $value := $clientCAKey.data }}
  {{- if eq $key "ca.key" }}
  tls.key: {{ $value }}
  {{- end }}
{{- end }}
{{- end }}
{{- if eq .Values.maestro.broker "grpc" }}
  tls.crt: {{ $gRPCCerts.ca }}
  tls.key: {{ $gRPCCerts.caKey}}
{{- end }}

---

{{- if eq .Values.maestro.broker "grpc" }}
apiVersion: v1
kind: Secret
metadata:
  name: grpc-broker-certs
  namespace: '{{ .Values.global.namespace }}'
data:
  ca.crt: {{ $gRPCCerts.ca }}
  server.crt: {{ $gRPCCerts.serverCert }}
  server.key: {{ $gRPCCerts.serverCertKey }}
{{- end }}
